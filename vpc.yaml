---
AWSTemplateFormatVersion: 2010-09-09
Description: vpc stack

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General
        Parameters:
          - SystemName
          - Env
      - Label:
          default: VPC configuration
        Parameters:
          - VPCCidrBlock
          - PublicSubnet1CidrBlock
          - PublicSubnet2CidrBlock
          - PrivateAppSubnet1CidrBlock
          - PrivateAppSubnet2CidrBlock
          - PrivateDBSubnet1CidrBlock
          - PrivateDBSubnet2CidrBlock

Parameters:
  SystemName:
    Description: System Name
    Type: String
  Env:
    Description: Server Environment Name
    Type: String
    Default: dev
  VPCCidrBlock:
    Description: Please enter the IP range (CIDR notation) for this VPC.
    Type: String
    Default: 10.0.0.0/16
  PublicSubnet1CidrBlock:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the 1st AZ.
    Type: String
    Default: 10.0.11.0/24
  PublicSubnet2CidrBlock:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the 2nd AZ.
    Type: String
    Default: 10.0.12.0/24
  PrivateAppSubnet1CidrBlock:
    Description: Please enter the IP range (CIDR notation) for the private app subnet in the 1st AZ.
    Type: String
    Default: 10.0.21.0/24
  PrivateAppSubnet2CidrBlock:
    Description: Please enter the IP range (CIDR notation) for the private app subnet in the 2nd AZ.
    Type: String
    Default: 10.0.22.0/24
  PrivateDBSubnet1CidrBlock:
    Description: Please enter the IP range (CIDR notation) for the private db subnet in the 1st AZ.
    Type: String
    Default: 10.0.31.0/24
  PrivateDBSubnet2CidrBlock:
    Description: Please enter the IP range (CIDR notation) for the private db subnet in the 2nd AZ.
    Type: String
    Default: 10.0.32.0/24

Resources:
  #-------------------------------------------------------------
  # VPC
  #-------------------------------------------------------------
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${SystemName}-${Env}-vpc

  #-------------------------------------------------------------
  # Internet Gateway
  #-------------------------------------------------------------
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${SystemName}-${Env}-igw

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  #-------------------------------------------------------------
  # Tier 1 - Public
  #-------------------------------------------------------------
  # EIP
  NatGatewayEIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${SystemName}-${Env}-eip-natgw-1

  NatGatewayEIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${SystemName}-${Env}-eip-natgw-2

  # Subnet
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CidrBlock
      AvailabilityZone: !Select [ 0, !GetAZs ]
      Tags:
      - Key: Name
        Value: !Sub
          - ${SystemName}-${Env}-subnet-public-${AZ}
          - { AZ: !Select [ 0, !GetAZs '' ] }

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CidrBlock
      AvailabilityZone: !Select [ 1, !GetAZs ]
      Tags:
      - Key: Name
        Value: !Sub
          - ${SystemName}-${Env}-subnet-public-${AZ}
          - { AZ: !Select [ 1, !GetAZs '' ] }

  # NAT Gateway
  NatGateway1:
    Type: AWS::EC2::NatGateway
    DependsOn: InternetGatewayAttachment
    Properties:
      AllocationId: !GetAtt NatGatewayEIP1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${SystemName}-${Env}-natgw-1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    DependsOn: InternetGatewayAttachment
    Properties:
      AllocationId: !GetAtt NatGatewayEIP2.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${SystemName}-${Env}-natgw-2

  # Route Table
  PublicRouteTable1:
    Type: AWS::EC2::RouteTable
    DependsOn: InternetGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${SystemName}-${Env}-route-public-1

  PublicRouteTable2:
    Type: AWS::EC2::RouteTable
    DependsOn: InternetGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${SystemName}-${Env}-route-public-2

  # Route
  PublicRoute1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable1

  PublicRoute2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable2

  # Route Table Association
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable1
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable2
      SubnetId: !Ref PublicSubnet2

  #-------------------------------------------------------------
  # Tier 2 - Private App
  #-------------------------------------------------------------
  # Subnet
  PrivateAppSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateAppSubnet1CidrBlock
      AvailabilityZone: !Select [ 0, !GetAZs ]
      Tags:
      - Key: Name
        Value: !Sub
          - ${SystemName}-${Env}-subnet-private-app-${AZ}
          - { AZ: !Select [ 0, !GetAZs '' ] }

  PrivateAppSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateAppSubnet2CidrBlock
      AvailabilityZone: !Select [ 1, !GetAZs ]
      Tags:
      - Key: Name
        Value: !Sub
          - ${SystemName}-${Env}-subnet-private-app-${AZ}
          - { AZ: !Select [ 1, !GetAZs '' ] }

  # Route Table
  PrivateAppRouteTable1:
    Type: AWS::EC2::RouteTable
    DependsOn: InternetGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${SystemName}-${Env}-route-private-app-1

  PrivateAppRouteTable2:
    Type: AWS::EC2::RouteTable
    DependsOn: InternetGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${SystemName}-${Env}-route-private-app-2

  # Route
  PrivateAppRoute1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
      RouteTableId: !Ref PrivateAppRouteTable1

  PrivateAppRoute2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
      RouteTableId: !Ref PrivateAppRouteTable2

  # Route Table Association
  PrivateAppSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateAppRouteTable1
      SubnetId: !Ref PrivateAppSubnet1

  PrivateAppSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateAppRouteTable2
      SubnetId: !Ref PrivateAppSubnet2

  #-------------------------------------------------------------
  # Tier 3 - Private DB
  #-------------------------------------------------------------
  # Subnet
  PrivateDBSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateDBSubnet1CidrBlock
      AvailabilityZone: !Select [ 0, !GetAZs ]
      Tags:
      - Key: Name
        Value: !Sub
          - ${SystemName}-${Env}-subnet-private-db-${AZ}
          - { AZ: !Select [ 0, !GetAZs "" ] }

  PrivateDBSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateDBSubnet2CidrBlock
      AvailabilityZone: !Select [ 1, !GetAZs ]
      Tags:
      - Key: Name
        Value: !Sub
          - ${SystemName}-${Env}-subnet-private-db-${AZ}
          - { AZ: !Select [ 1, !GetAZs "" ] }

  # Route Table
  PrivateDBRouteTable1:
    Type: AWS::EC2::RouteTable
    DependsOn: InternetGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${SystemName}-${Env}-route-private-db-1

  PrivateDBRouteTable2:
    Type: AWS::EC2::RouteTable
    DependsOn: InternetGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${SystemName}-${Env}-route-private-db-2

  # Route Table Association
  PrivateDBSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateDBRouteTable1
      SubnetId: !Ref PrivateDBSubnet1

  PrivateDBSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateDBRouteTable2
      SubnetId: !Ref PrivateDBSubnet2

Outputs:
  VpcID:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}::vpc-id

  PublicSubnet1:
    Description: Public Subnet 1 ID
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${AWS::StackName}::public-subnet-id-1

  PublicSubnet2:
    Description: Public Subnet 2 ID
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${AWS::StackName}::public-subnet-id-2

  PrivateAppSubnet1:
    Description: Private App Subnet 1 ID
    Value: !Ref PrivateAppSubnet1
    Export:
      Name: !Sub ${AWS::StackName}::private-app-subnet-id-1

  PrivateAppSubnet2:
    Description: Private App Subnet 2 ID
    Value: !Ref PrivateAppSubnet2
    Export:
      Name: !Sub ${AWS::StackName}::private-app-subnet-id-2

  PrivateDBSubnet1:
    Description: Private DB Subnet 1 ID
    Value: !Ref PrivateDBSubnet1
    Export:
      Name: !Sub ${AWS::StackName}::private-db-subnet-id-1

  PrivateDBSubnet2:
    Description: Private DB Subnet 2 ID
    Value: !Ref PrivateDBSubnet2
    Export:
      Name: !Sub ${AWS::StackName}::private-db-subnet-id-2
